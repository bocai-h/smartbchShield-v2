import React from 'react';
import { Layout } from 'antd';
const { Header, Footer, Content } = Layout;
import intl from 'react-intl-universal';
import twitter from '../static/twitter.svg';
import telegram from '../static/telegram.svg';
import medium from '../static/medium.svg';
import twitterLight from '../static/twitter_light.svg';
import telegramLight from '../static/telegram_light.svg';
import mediumLight from '../static/medium_light.svg';
import { Nav } from '../components/nav';
import MobileNav from '../components/mobileNav';

const locales = {
  'en-US': require('../locales/en_US'),
  'zh-CN': require('../locales/zh_CN'),
};

class SuterProtocol extends React.Component {
  state = {
    twitterLogo: twitter,
    telegramLogo: telegram,
    mediumLogo: medium,
    QA_help: {
      title: 'Suter Shield Tutorial',
      active: {
        index: 0,
        target: {
          active: true,
          t: '1.Register a Suter account or Login to your Suter account',
          o: [
            {
              t: 'a.Click "CONNECT WALLE" to connect to your Metamask wallet',
            },
            {
              t:
                'b.Select the token you wish to transfer privately via Suter network.',
              img: require('../static/help01.png'),
            },
            {
              t:
                'c.If you have not registered an account before, click on Register.',
              img: require('../static/help02.png'),
            },
            {
              t:
                'd.You could either choose “Private Key Generator” or “Pick Your Own Key”. If you select the “Private Key Generator” item, the key generator will automatically generate the secret key for you. ',
              img: require('../static/help03.png'),
            },
            {
              t:
                'e.Click on “Copy And Next”. Paste your private key under “Input Your Private Key” and “Confirm Your Private Key”. Check the box next to “I choose a sufficiently random Suter Account private key. I will be responsible for its security”. Then click on “Register” and approve the request in your Metamask wallet. Meanwhile, the website will download a text file, which will be your private key. Please keep it in a safe place, or better yet make a physical copy of your private key and safely destroy the text file.',
              img: require('../static/help04.png'),
            },
            {
              t:
                'f.You could also choose to “Create by yourself”. Please make sure your private key is sufficiently random. We require your private key to be at least 16 characters long, at most 64 characters long and contain at least one lowercase letter and one number. In theory, any string of numbers and letters can be used to generate your Suter account, even a simple password such as "123456", but this is extremely insecure, please do not do this. For the safety of your Suter account, please keep your private key in a safe place.',
            },
            {
              t:
                'g.If you have already registered an account, you could either copy the password from the downloaded text file generated by the key generator, or you could type in your password in the “Input Your Private Key” frame, and click on “Login” and you will successfully log into your Suter account.',
              img: require('../static/help02.png'),
            },
          ],
        },
      },
      list: [
        {
          active: true,
          t: '1.Register a Suter account or Login to your Suter account',
          o: [
            {
              t: 'a.Click "CONNECT WALLE" to connect to your Metamask wallet',
            },
            {
              t:
                'b.Select the token you wish to transfer privately via Suter network.',
              img: require('../static/help01.png'),
            },
            {
              t:
                'c.If you have not registered an account before, click on Register.',
              img: require('../static/help02.png'),
            },
            {
              t:
                'd.You could either choose “Private Key Generator” or “Pick Your Own Key”. If you select the “Private Key Generator” item, the key generator will automatically generate the secret key for you. ',
              img: require('../static/help03.png'),
            },
            {
              t:
                'e.Click on “Copy And Next”. Paste your private key under “Input Your Private Key” and “Confirm Your Private Key”. Check the box next to “I choose a sufficiently random Suter Account private key. I will be responsible for its security”. Then click on “Register” and approve the request in your Metamask wallet. Meanwhile, the website will download a text file, which will be your private key. Please keep it in a safe place, or better yet make a physical copy of your private key and safely destroy the text file.',
              img: require('../static/help04.png'),
            },
            {
              t:
                'f.You could also choose to “Create by yourself”. Please make sure your private key is sufficiently random. We require your private key to be at least 16 characters long, at most 64 characters long and contain at least one lowercase letter and one number. In theory, any string of numbers and letters can be used to generate your Suter account, even a simple password such as "123456", but this is extremely insecure, please do not do this. For the safety of your Suter account, please keep your private key in a safe place.',
            },
            {
              t:
                'g.If you have already registered an account, you could either copy the password from the downloaded text file generated by the key generator, or you could type in your password in the “Input Your Private Key” frame, and click on “Login” and you will successfully log into your Suter account.',
              img: require('../static/help02.png'),
            },
          ],
        },
        {
          active: false,
          t:
            '2.Stake your token to the Suter Shield smart contract and get an anonymized version of your token',
          o: [
            {
              t: 'a. Select the token you wish to transfer privately.',
            },
            {
              t: 'b.Input your private key and login.',
              img: require('../static/help02.png'),
            },
            {
              t:
                'c. Enter the amount of tokens you want to stake (the unit of measurement is Unit, the unit ratio for each token is different, please refer to Suter Shield Q&A: Why Suter Shield’s tokens use Unit as the unit of measurement).',
              img: require('../static/help05.png'),
            },
            {
              t:
                'd. After the above steps are completed, your Suter account will display the updated Suter token amount in units, and the native token amount in your Ethereum account will decrease correspondingly. The Suter token, which is the anonymized version of the native token are usually presented as “s”+the name of the native token. For example, ETH will be sETH in Suter network, and USDT will be sUSDT, Suter will be sSUTER.',
              img: require('../static/help06.png'),
            },
          ],
        },
        {
          active: false,
          t: '3.Transfer your Suter token.',
          o: [
            {
              t: 'a. Select the token you wish to transfer privately.',
            },
            {
              t: 'b. Login to your Suter account.',
              img: require('../static/help02.png'),
            },
            {
              t:
                'c. Enter the amount of Suter token and the receiver Suter account public key to transfer.',
              img: require('../static/help07.png'),
            },
          ],
        },
        {
          active: false,
          t: '4.Withdrawal (Burn) your Suter token',
          o: [
            {
              t: 'a. Connect your Metamask wallet',
            },
            {
              t: 'b. Select the token you wish to transfer privately.',
            },
            {
              t: 'c. Login to your Suter account.',
              img: require('../static/help02.png'),
            },
            {
              t:
                'd. Enter the amount of Suter token in units you wish to withdrawal.',
              img: require('../static/help08.png'),
            },
            {
              t:
                'e. The amount of Suter token in your Suter account will be reduced by the entered amount, and the same amount of token minus fee will be returned to your Ethereum account.',
            },
          ],
        },
      ],
    },
    QA_help_CN: {
      title: '使⽤教程',
      active: {
        index: 0,
        target: {
          active: true,
          t: '1.注册一个Suter账号或者登入您的账号',
          o: [
            {
              t: 'a.点击"连接钱包"按钮来导入您的Metamask钱包。',
            },
            {
              t: 'b.选择您希望通过suter网络来隐私转账的代币。',
              img: require('../static/help01.png'),
            },
            {
              t: 'c.如果您还没注册账号，请点击注册。',
              img: require('../static/help02.png'),
            },
            {
              t:
                'd.你可以选择“私钥生成器”或“自选私钥”。如果你选择“私钥生成器”, 私钥生成器将为您生成私钥。',
              img: require('../static/help03.png'),
            },
            {
              t:
                'e.点击“复制和下一步”。将您的私钥贴在“输入您的私钥”和“确认密钥”框中。在“我选择了足够随机的Suter账号私钥并将妥善保存改私钥”框打勾。然后点击“注册”并在Metamask钱包中授权该请求。同时，网站将为您下载一个文档文件，该文件中有您的私钥。请将其存储在安全的地方，或者把您的私钥抄在纸上，然后把该文档文件彻底删除。',
              img: require('../static/help04.png'),
            },
            {
              t:
                'f.您也可以选择“自选私钥”注册私钥。请务必保证您的私钥足够随机，我们会要求您的私钥长度至少为16个字符,最长为64个字符，且至少包含一个小写字母和一个数字。从理论上讲，任何数字和字母字符串都可以用于生成您的Suter帐户，甚至可以使用非常简单的密码（例如“ 123456”）来生成您的Suter帐户，但这是绝对不安全，请不要这样做。 为了确保您的Suter账户的安全，请将您的私钥保存在安全的地方。',
            },
            {
              t:
                'g.如果您已经注册了一个账号，您可以拷贝下载文档中的密钥或者直接在“输入您的私钥”框中输入您的私钥，并点击“登录”，您将成功登陆。',
              img: require('../static/help02.png'),
            },
          ],
        },
      },
      list: [
        {
          active: true,
          t: '1.注册一个Suter账号或者登入您的账号。',
          o: [
            {
              t: 'a.点击"连接钱包"按钮来导入您的Metamask钱包。',
            },
            {
              t: 'b.选择您希望通过suter网络来隐私转账的代币。',
              img: require('../static/help01.png'),
            },
            {
              t: 'c.如果您还没注册账号，请点击注册。',
              img: require('../static/help02.png'),
            },
            {
              t:
                'd.你可以选择“私钥生成器”或“自己生成”。如果你选择“私钥生成器”, 私钥生成器将为您生成私钥。',
              img: require('../static/help03.png'),
            },
            {
              t:
                'e.点击“复制和下一步”。将您的私钥贴在“输入您的私钥”和“确认密钥”框中。在“我选择了足够随机的Suter账号私钥并将妥善保存改私钥”框打勾。然后点击“注册”并在Metamask钱包中授权该请求。同时，网站将为您下载一个文档文件，该文件中有您的私钥。请将其存储在安全的地方，或者把您的私钥抄在纸上，然后把该文档文件彻底删除。',
              img: require('../static/help04.png'),
            },
            {
              t:
                'f.您也可以选择“自选私钥”注册私钥。请务必保证您的私钥足够随机，我们会要求您的私钥长度至少为16个字符,最长为64个字符，且至少包含一个小写字母和一个数字。从理论上讲，任何数字和字母字符串都可以用于生成您的Suter帐户，甚至可以使用非常简单的密码（例如“ 123456”）来生成您的Suter帐户，但这是绝对不安全，请不要这样做。 为了确保您的Suter账户的安全，请将您的私钥保存在安全的地方。',
            },
            {
              t:
                'g.如果您已经注册了一个账号，您可以拷贝下载文档中的密钥或者直接在“输入您的私钥”框中输入您的私钥，并点击“登录”，您将成功登陆。',
              img: require('../static/help02.png'),
            },
          ],
        },
        {
          active: false,
          t: '2.将您的代币存入Suter Shield智能合约，并获得相应代币的匿名版本。',
          o: [
            {
              t: 'a.选择您需要隐私转账的代币。',
            },
            {
              t: 'b.输入您的私钥并登录。',
              img: require('../static/help02.png'),
            },
            {
              t:
                'c.输入您要存入的代币数量（度量单位为Unit，每个代币的单位汇率不同，请参阅Suter Shield问答：为什么Suter Shield的代币使用Unit作为度量单位），确认存入。',
              img: require('../static/help05.png'),
            },
            {
              t:
                'd.完成上述步骤后，您的Suter帐户将显示更新后的Suter令牌数量（单位是Units），而以太坊帐户中的代币数量将相应减少。 Suter代币是原始代币的匿名版本，通常显示为“ s” +原始代币的名称。 例如，在Suter网络中，ETH将显示为sETH，USDT将显示为sUSDT，Suter将显示为sSUTER转账您的Suter代币。',
              img: require('../static/help06.png'),
            },
          ],
        },
        {
          active: false,
          t: '3.转账您的Suter代币。',
          o: [
            {
              t: 'a.选择您需要隐私转账的代币。',
            },
            {
              t: 'b.登录您的Suter帐户',
              img: require('../static/help02.png'),
            },
            {
              t: 'c. 输入Suter代币数量和接收方Suter帐户公钥进行转账',
              img: require('../static/help07.png'),
            },
          ],
        },
        {
          active: false,
          t: '4.取出您的Suter代币',
          o: [
            {
              t: 'a. 连接您的Metamask钱包。',
            },
            {
              t: 'b. 选择您需要隐私转账的代币。',
            },
            {
              t: 'c. 登录到您的Suter帐户。',
              img: require('../static/help02.png'),
            },
            {
              t: 'd. 输入您要提取的Suter代币数量，并确认取出。',
              img: require('../static/help08.png'),
            },
            {
              t:
                'e. 您的Suter账户中的Suter代币数量将相应减少，并且相同数量的代币减去费用将会被退回到您的以太坊账户中。',
            },
          ],
        },
      ],
    },
  };

  constructor(props) {
    super(props);
  }

  componentDidMount() {
    this.loadLocales();
  }

  loadLocales = (lang = 'en-US') => {
    // init method will load CLDR locale data according to currentLocale
    // react-intl-universal is singleton, so you should init it only once in your app
    var userLang = navigator.language || navigator.userLanguage;
    if (userLang) {
      if (userLang === 'zh') {
        lang = 'zh-CN';
      }
    }
    let cacheLang = localStorage.getItem('lang');
    if (cacheLang) {
      lang = cacheLang;
    }
    intl
      .init({
        currentLocale: lang, // TODO: determine locale here
        locales,
      })
      .then(() => {
        // After loading CLDR locale data, start to render
        this.setState({ initDone: true });
      });
  };
  lightFooterLogo = ctype => {
    if (ctype === 'twitter') {
      this.setState({ twitterLogo: twitterLight });
    }
    if (ctype === 'telegram') {
      this.setState({ telegramLogo: telegramLight });
    }
    if (ctype === 'medium') {
      this.setState({ mediumLogo: mediumLight });
    }
  };

  footerLogo = ctype => {
    if (ctype === 'twitter') {
      this.setState({ twitterLogo: twitter });
    }
    if (ctype === 'telegram') {
      this.setState({ telegramLogo: telegram });
    }
    if (ctype === 'medium') {
      this.setState({ mediumLogo: medium });
    }
  };
  handleInfo = (it, index) => {
    const { QA_help, QA_help_CN } = this.state;
    let type = intl.options.currentLocale === 'zh-CN' ? QA_help_CN : QA_help;
    type.active.index = index;
    type.active.target = it;
    type.list.forEach(it => {
      it.active = false;
    });
    type.list[index].active = true;
    this.setState({ type });
  };
  langChangeTo = lang => {
    localStorage.setItem('lang', lang);
    this.loadLocales(lang);
  };
  render() {
    const {
      twitterLogo,
      telegramLogo,
      mediumLogo,
      QA_help_CN,
      QA_help,
    } = this.state;
    let lang = intl.options.currentLocale;

    let info = lang === 'zh-CN' ? QA_help_CN : QA_help;

    return (
      <Layout className="suterProtocol">
        <Header>
          <div className="head-top">
            <Nav intl={intl} indexURL="/app" currentNav="tutorial" />
          </div>
          <div className="header-btn">
            <div className="top-btn">
              <i
                onClick={() => this.langChangeTo('en-US')}
                className={`${lang === 'en-US' ? 'active' : ''}`}
              >
                EN
              </i>
              <i
                className={`${lang === 'zh-CN' ? 'active' : ''}`}
                onClick={() => this.langChangeTo('zh-CN')}
              >
                中
              </i>
            </div>
            <div className="mobileNavContainer">
              <MobileNav intl={intl} currentNav="tutorial" />
            </div>
          </div>
        </Header>
        <Content>
          <div className="QA">
            <div className="left">
              <h2>{info.title}</h2>
              <ul>
                {info.list.map((it, index) => {
                  return (
                    <li
                      onClick={() => this.handleInfo(it, index)}
                      className={it.active ? 'active' : ''}
                      key={index}
                    >
                      {it.t}
                    </li>
                  );
                })}
              </ul>
            </div>
            <div className="right">
              <h3>{info.active.target.t}</h3>
              <i></i>
              <ul>
                {info.active.target.o.map((it, index) => {
                  return (
                    <li key={index}>
                      {typeof it === 'object' ? it.t : it}
                      {it.img && <img src={it.img} alt="" />}
                    </li>
                  );
                })}
              </ul>
            </div>
          </div>
        </Content>
        <Footer>
          <a
            href="https://twitter.com/suterusu_io"
            target="_blank"
            rel="noreferrer"
          >
            <img
              src={twitterLogo}
              alt=""
              onMouseOver={() => this.lightFooterLogo('twitter')}
              onMouseOut={() => this.footerLogo('twitter')}
            />
          </a>
          <a href="https://t.me/suterusu_en" target="_blank" rel="noreferrer">
            <img
              src={telegramLogo}
              alt=""
              onMouseOver={() => this.lightFooterLogo('telegram')}
              onMouseOut={() => this.footerLogo('telegram')}
            />
          </a>
          <a
            href="https://suterusu.medium.com/"
            target="_blank"
            rel="noreferrer"
          >
            <img
              src={mediumLogo}
              alt=""
              onMouseOver={() => this.lightFooterLogo('medium')}
              onMouseOut={() => this.footerLogo('medium')}
            />
          </a>
        </Footer>
      </Layout>
    );
  }
}

export default SuterProtocol;
